{"version":3,"sources":["talent-simulator/components/SvgTooltip.tsx","talent-simulator/components/Node.tsx","talent-simulator/components/index.ts","talent-simulator/Constants.ts","talent-simulator/TalentSimulator.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SvgTooltip","children","tooltip","forceShow","target","useRef","useState","showTooltip","setShowTooltip","targetReady","setTargetReady","listeners","mouseOver","onMouseOver","onFocus","onMouseLeave","props","x","y","width","height","cx","cy","r","useEffect","viewBox","ref","style","visibility","current","align","bottom","trapFocus","Node","id","isSelected","nodes","prevNodesIndexes","nextNodesIndexes","onClick","searchString","isOpen","isFound","undefined","find","nodeIndex","includes","isClickable","map","nextNode","x1","y1","z","x2","y2","stroke","key","circleRadius","cursor","fill","fillOpacity","MAX_VALUE","NODES","type","point","name","value","TalentSimulator","showAllTooltip","setShowAllTooltip","totalPoints","setTotalPoints","summary","setSummary","setsearchString","imporBuildString","setImportBuildString","pathParts","window","location","href","split","buildString","importBuild","history","pushState","size","maxValue","getSize","initialNodes","getTooltip","description","Math","round","forEach","NODE","node","push","setNodes","_nodes","_totalPoints","_summary","indexString","index","parseInt","isNaN","length","_node","splice","getBuild","Grid","rows","columns","gap","areas","start","end","Box","gridArea","pad","background","Button","primary","label","TextInput","placeholder","onChange","event","disabled","link","navigator","clipboard","writeText","then","alert","Heading","Object","keys","Text","theme","global","colors","brand","font","family","AppBar","tag","direction","justify","left","right","vertical","elevation","zIndex","App","Grommet","full","ResponsiveContext","Consumer","level","margin","flex","overflow","horizontal","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c6f99329.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Drop } from 'grommet';\n\nexport interface SvgTooltipProps {\n  /**\n   * Should be a single svg element that tooltip attaches to.\n   * Currently only support child that has width and height.\n   * If x, y omitted would assume x = 0 and y = 0.\n   */\n  children: JSX.Element;\n  /** Tooltip to be displayed upon mouse hover */\n  tooltip: string | JSX.Element;\n  /** Force to show the tooltip without mouse over */\n  forceShow?: boolean;\n}\n\nexport const SvgTooltip = ({ children, tooltip, forceShow }: SvgTooltipProps) => {\n  const target = useRef(null) as React.MutableRefObject<HTMLDivElement | null>;\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [targetReady, setTargetReady] = useState(false);\n\n  let listeners = {};\n  if (!forceShow) {\n    const mouseOver = () => setShowTooltip(true);\n    const mouseLeave = () => setShowTooltip(false);\n    listeners = {\n      onMouseOver: mouseOver,\n      onFocus: mouseOver,\n      onMouseLeave: mouseLeave,\n    };\n  }\n\n  let { x = 0, y = 0, width = 0, height = 0, cx, cy, r } = children.props;\n\n  if (!!cx && !!cy && !!r) {\n    x = cx - r;\n    y = cy - r;\n    width = 2 * r;\n    height = 2 * r;\n  }\n\n  // To fix the issue when target ref is not ready on the first rendering\n  // Rerender after target ref is ready\n  // https://stackoverflow.com/questions/56541342/react-hooks-why-is-current-null-for-useref-hook\n  useEffect(() => {\n    setTargetReady(true);\n  }, [target]);\n\n  return (\n    <>\n      <svg x={x} y={y} width={width} height={height} viewBox={`${x} ${y} ${width} ${height}`} {...listeners}>\n        <foreignObject x={x} y={y} width={width} height={height}>\n          {/* since tooltip could not pin to svg elements, using a invisible div here to provide a placeholder for tooltip to pin to */}\n          <div ref={target} style={{ width: '100%', height: '100%', visibility: 'hidden' }} />\n          {/* Due to grommet limitation, using grommet component may cause error when either  */}\n          {/* 1. not wrapped within an AppContainer or  */}\n          {/* 2. somehow top level AppContainer is rendered after some grommet component; */}\n          {/* therefore, adding a local AppContainer to workaround this potential issue */}\n          {targetReady && (showTooltip || forceShow) && target.current && (\n            <Drop\n              align={{ bottom: 'top' }}\n              target={target.current}\n              // trapFocus set to false allows tabbing through\n              trapFocus={false}>\n              {tooltip}\n            </Drop>\n          )}\n        </foreignObject>\n        {/* target svg component needs to be at end so it would not be covered by the placeholder div */}\n        {children}\n      </svg>\n    </>\n  );\n};\n","import React from 'react';\n\nimport { SvgTooltip } from './SvgTooltip';\n\nimport { NodeType } from './types';\n\nexport interface NodeProps extends Omit<NodeType, 'id'> {\n  onClick: () => void;\n  showTooltip?: boolean;\n  [otherProp: string]: any;\n}\n\nexport const Node = ({\n  x,\n  y,\n  id,\n  isSelected,\n  nodes,\n  prevNodesIndexes,\n  nextNodesIndexes,\n  onClick,\n  tooltip,\n  showTooltip,\n  searchString,\n}: NodeProps) => {\n  const circleRadius = 2.5;\n  const sideLength = circleRadius * 4;\n\n  let isOpen = false;\n  let isFound = false;\n\n  if (!isSelected) {\n    isOpen =\n      id === 0 ||\n      prevNodesIndexes.find(nodeIndex => nodes[nodeIndex].isSelected) !== undefined ||\n      nextNodesIndexes.find(nodeIndex => nodes[nodeIndex].isSelected) !== undefined;\n  }\n\n  // TODO: Search should be done with special search key word string\n  // so the compound node could be found correctly\n  if (searchString && tooltip?.includes(searchString)) {\n    isFound = true;\n  }\n\n  const isClickable = isSelected || isOpen;\n\n  return (\n    <>\n      {nextNodesIndexes.map(nodeIndex => {\n        const nextNode = nodes[nodeIndex];\n        return (\n          <line\n            x1={x}\n            y1={y}\n            z={100}\n            x2={nextNode.x}\n            y2={nextNode.y}\n            stroke={isSelected && nextNode.isSelected ? 'blue' : 'black'}\n            key={`${id}-${nextNode.id}`}></line>\n        );\n      })}\n      <svg\n        x={x - circleRadius * 2}\n        y={y - circleRadius * 2}\n        width={sideLength}\n        height={sideLength}\n        viewBox={`0 0 ${sideLength} ${sideLength}`}\n        onClick={isClickable ? onClick : () => {}}\n        style={isClickable ? { cursor: 'pointer' } : undefined}>\n        <SvgTooltip tooltip={tooltip || ''} forceShow={showTooltip}>\n          <circle\n            cx={circleRadius * 2}\n            cy={circleRadius * 2}\n            r={circleRadius}\n            fill={isSelected ? 'blue' : isOpen ? 'green' : 'gray'}></circle>\n        </SvgTooltip>\n        {isFound && <circle cx={circleRadius * 2} cy={circleRadius * 2} r={4} stroke={'red'} fillOpacity={0}></circle>}\n      </svg>\n      <svg></svg>\n    </>\n  );\n};\n","export { Node } from './Node';\nexport { SvgTooltip } from './SvgTooltip';\nexport * from './types';\n","// export const  = {\n//   skill\n// }\n\n// const getRange = (min: number, max: number, step?: number = 1) =>\n//   Array.from(new Array(max > min ? Math.ceil((max - min) / step) : Math.ceil((min - max) / step)), (x, i) =>\n//     max > min ? i * step + min : min - i * step\n//   ).join(' | ');\n\n// explained at https://rares.uk/typescript-unextend-interface/\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nexport const MAX_VALUE = {\n  x: 6,\n  y: 30,\n};\n\nexport type NodeTypeType = 'stats' | 'skill' | 'special';\n\nexport type NODEType = {\n  id: number;\n  x: number;\n  y: number;\n  type: NodeTypeType;\n  point: 3 | 4 | 5;\n  name: string;\n  value?: number;\n  description?: string;\n  prevNodesIndexes: number[];\n};\n\nexport type NODESType = NODEType[];\n\nexport const NODES: NODESType = [\n  {\n    id: 0,\n    x: 2,\n    y: 0,\n    type: 'stats',\n    point: 3,\n    name: '威',\n    value: 5,\n    prevNodesIndexes: [],\n  },\n  {\n    id: 1,\n    x: 4,\n    y: 2,\n    type: 'stats',\n    point: 3,\n    name: '耐',\n    value: 5,\n    prevNodesIndexes: [0],\n  },\n  {\n    id: 2,\n    x: 5,\n    y: 3,\n    type: 'stats',\n    point: 3,\n    name: '秘',\n    value: 5,\n    prevNodesIndexes: [1],\n  },\n  {\n    id: 3,\n    x: 2,\n    y: 4,\n    type: 'stats',\n    point: 3,\n    name: '运',\n    value: 5,\n    prevNodesIndexes: [1],\n  },\n  {\n    id: 4,\n    x: 1,\n    y: 5,\n    type: 'stats',\n    point: 3,\n    name: '全属性',\n    value: 3,\n    prevNodesIndexes: [3],\n  },\n  {\n    id: 5,\n    x: 3,\n    y: 5,\n    type: 'stats',\n    point: 3,\n    name: '敏',\n    value: 5,\n    prevNodesIndexes: [2, 3],\n  },\n  {\n    id: 6,\n    x: 3,\n    y: 7,\n    type: 'stats',\n    point: 3,\n    name: '一转',\n    value: 2,\n    prevNodesIndexes: [5],\n  },\n  {\n    id: 7,\n    x: 5,\n    y: 7,\n    type: 'stats',\n    point: 3,\n    name: '一转',\n    value: 2,\n    prevNodesIndexes: [2],\n  },\n  {\n    id: 8,\n    x: 6,\n    y: 8,\n    type: 'stats',\n    point: 3,\n    name: '运',\n    value: 5,\n    prevNodesIndexes: [7],\n  },\n  {\n    id: 9,\n    x: 1,\n    y: 9,\n    type: 'stats',\n    point: 3,\n    name: '耐',\n    value: 5,\n    prevNodesIndexes: [6],\n  },\n  {\n    id: 10,\n    x: 3,\n    y: 9,\n    type: 'stats',\n    point: 3,\n    name: '敏',\n    value: 5,\n    prevNodesIndexes: [6],\n  },\n  {\n    id: 11,\n    x: 5,\n    y: 9,\n    type: 'stats',\n    point: 3,\n    name: '威',\n    value: 5,\n    prevNodesIndexes: [7],\n  },\n  {\n    id: 12,\n    x: 2,\n    y: 10,\n    type: 'stats',\n    point: 3,\n    name: '普攻',\n    value: 0.07,\n    prevNodesIndexes: [9, 10],\n  },\n  {\n    id: 13,\n    x: 4,\n    y: 10,\n    type: 'stats',\n    point: 3,\n    name: '腕力',\n    value: 0.5,\n    prevNodesIndexes: [11],\n  },\n  {\n    id: 14,\n    x: 6,\n    y: 10,\n    type: 'stats',\n    point: 3,\n    name: '秘',\n    value: 5,\n    prevNodesIndexes: [8],\n  },\n  {\n    id: 15,\n    x: 1,\n    y: 13,\n    type: 'special',\n    point: 3,\n    name: '燃烧间隔-50%',\n    prevNodesIndexes: [9],\n  },\n  {\n    id: 16,\n    x: 3,\n    y: 13,\n    type: 'stats',\n    point: 3,\n    name: '二转',\n    value: 2,\n    prevNodesIndexes: [14],\n  },\n  {\n    id: 17,\n    x: 2,\n    y: 14,\n    type: 'stats',\n    point: 3,\n    name: '全抗性',\n    value: 0.04,\n    prevNodesIndexes: [],\n  },\n  {\n    id: 18,\n    x: 1,\n    y: 15,\n    type: 'stats',\n    point: 3,\n    name: '二转',\n    value: 2,\n    prevNodesIndexes: [15, 17],\n  },\n  {\n    id: 19,\n    x: 3,\n    y: 15,\n    type: 'stats',\n    point: 3,\n    name: '全属性',\n    value: 3,\n    prevNodesIndexes: [16],\n  },\n  {\n    id: 20,\n    x: 0,\n    y: 16,\n    type: 'skill',\n    point: 3,\n    name: '生命绽放',\n    // description: '加血',\n    prevNodesIndexes: [18],\n  },\n  {\n    id: 21,\n    x: 2,\n    y: 16,\n    type: 'stats',\n    point: 3,\n    name: '暴击率',\n    value: 0.05,\n    prevNodesIndexes: [17, 19],\n  },\n];\n","import React, { useEffect, useState } from 'react';\nimport { Heading, Button, Text, Grid, Box, TextInput } from 'grommet';\n\nimport { MAX_VALUE, NODES } from './Constants';\n\nimport { Node, NodeType } from './components';\n\n// const SCALE = 4;\nconst buildSeparator = '-';\nconst urlSeparator = '?';\n\nexport function TalentSimulator() {\n  const [showAllTooltip, setShowAllTooltip] = useState(false);\n  const [totalPoints, setTotalPoints] = useState(0);\n  const [summary, setSummary] = useState({} as { [key: string]: number | undefined });\n  const [searchString, setsearchString] = useState('');\n  const [imporBuildString, setImportBuildString] = useState('');\n\n  useEffect(() => {\n    const pathParts = window.location.href.split(urlSeparator);\n    const buildString = pathParts[1];\n    if (buildString) {\n      importBuild(buildString);\n      window.history.pushState('some state', 'some title', pathParts[0]);\n    }\n  });\n\n  const getSize = (maxValue: any) => {\n    const width = maxValue.x * 20 + 20;\n    const height = maxValue.y * 10 + 10;\n    return { width, height, viewBox: `-10 -5 ${width} ${height}` };\n  };\n\n  const size = getSize(MAX_VALUE);\n\n  const initialNodes: NodeType[] = [];\n\n  const getTooltip = ({\n    type,\n    name,\n    value = 0,\n    description = '',\n  }: {\n    type: string;\n    name: string;\n    value?: number;\n    description?: string;\n  }) => {\n    if (type === 'stats') {\n      return `${name}+${value >= 1 ? value : `${Math.round(value * 100)}%`}`;\n    } else if (type === 'skill') {\n      return `${name}\\n${description}`;\n    } else {\n      return `${name}`;\n    }\n  };\n\n  NODES.forEach(NODE => {\n    const node: NodeType = {\n      id: NODE.id,\n      isSelected: false,\n      x: NODE.x * 20,\n      y: size.height - NODE.y * 10 - 20,\n      point: NODE.point,\n      name: NODE.name,\n      value: NODE.value,\n      description: NODE.description,\n      tooltip: getTooltip(NODE),\n      nextNodesIndexes: [],\n      prevNodesIndexes: NODE.prevNodesIndexes,\n    };\n    node.prevNodesIndexes.forEach(nodeIndex => {\n      const prevNode: NodeType = initialNodes[nodeIndex];\n      prevNode.nextNodesIndexes.push(node.id);\n    });\n    initialNodes.push(node);\n  });\n\n  const [nodes, setNodes] = useState(initialNodes);\n\n  const onClick = (index: number) => {\n    const _node = nodes[index];\n    const _nodes = [...nodes];\n    _nodes.splice(index, 1, { ..._node, isSelected: !_node.isSelected });\n    setTotalPoints(totalPoints + (_node.isSelected ? -_node.point : _node.point));\n    setNodes(_nodes);\n    const _summary = { ...summary };\n    if (_summary[_node.name] && _node.value) {\n      _summary[_node.name] = (_summary[_node.name] || 0) + (_node.isSelected ? -_node.value : _node.value);\n    } else {\n      _summary[_node.name] = _node.value;\n    }\n    setSummary(_summary);\n  };\n\n  const clearAll = () => {\n    setTotalPoints(0);\n    setNodes(initialNodes);\n    setSummary({});\n  };\n\n  const importBuild = (buildString?: string) => {\n    const _nodes = [...initialNodes];\n    let _totalPoints = 0;\n    const _summary: { [key: string]: number | undefined } = {};\n    (buildString || imporBuildString).split(buildSeparator).forEach(indexString => {\n      const index = parseInt(indexString);\n      if (!isNaN(index) && index < _nodes.length) {\n        const _node = _nodes[index];\n        _nodes.splice(index, 1, { ..._node, isSelected: !_node.isSelected });\n        _totalPoints = _totalPoints + (_node.isSelected ? -_node.point : _node.point);\n        if (_summary[_node.name] && _node.value) {\n          _summary[_node.name] = (_summary[_node.name] || 0) + (_node.isSelected ? -_node.value : _node.value);\n        } else {\n          _summary[_node.name] = _node.value;\n        }\n      }\n    });\n    setTotalPoints(_totalPoints);\n    setNodes(_nodes);\n    setSummary(_summary);\n    setImportBuildString('');\n  };\n\n  const getBuild = () => {\n    let buildString = '';\n    nodes.forEach(node => {\n      if (node.isSelected) {\n        buildString += node.id === 0 ? node.id : `${buildSeparator}${node.id}`;\n      }\n    });\n    return buildString;\n  };\n\n  return (\n    <>\n      <Grid\n        fill={true}\n        rows={['100%']}\n        columns={['50%', '50%']}\n        gap=\"small\"\n        areas={[\n          { name: 'stats', start: [0, 0], end: [0, 0] },\n          { name: 'starMap', start: [1, 0], end: [1, 0] },\n        ]}>\n        <Box gridArea=\"stats\" pad={'10px'} background=\"light-5\">\n          <Grid\n            fill=\"horizontal\"\n            rows={['xxsmall', 'xxsmall', 'xxsmall', 'xxsmall']}\n            columns={['22%', '22%', '22%', '22%']}\n            gap=\"small\"\n            areas={[\n              { name: 'showAll', start: [2, 0], end: [2, 0] },\n              { name: 'resetAll', start: [3, 0], end: [3, 0] },\n              { name: 'importString', start: [0, 1], end: [2, 1] },\n              { name: 'importButton', start: [3, 1], end: [3, 1] },\n              { name: 'currentBuild', start: [0, 2], end: [2, 2] },\n              { name: 'exportButton', start: [3, 2], end: [3, 2] },\n              { name: 'searchBar', start: [0, 3], end: [3, 3] },\n            ]}>\n            <Button\n              gridArea=\"showAll\"\n              primary\n              label={showAllTooltip ? '全部隐藏' : '全部显示'}\n              onClick={() => setShowAllTooltip(!showAllTooltip)}\n            />\n            <Button gridArea=\"resetAll\" fill={false} primary label={'重置'} onClick={() => clearAll()} />\n            <Box gridArea=\"importString\" background=\"light-5\">\n              <TextInput\n                placeholder=\"导入BD的星图点\"\n                value={imporBuildString}\n                onChange={event => {\n                  setImportBuildString(event.target.value);\n                }}\n              />\n            </Box>\n            <Button gridArea=\"importButton\" fill={false} primary label={'导入'} onClick={() => importBuild()} />\n            <Box gridArea=\"currentBuild\" background=\"light-5\">\n              <TextInput disabled placeholder=\"现在的星图点\" value={getBuild()} />\n            </Box>\n            <Button\n              gridArea=\"exportButton\"\n              fill={false}\n              primary\n              label={'导出链接'}\n              onClick={() => {\n                const link = `${window.location.href}${urlSeparator}${getBuild()}`;\n                navigator.clipboard.writeText(link).then(() => alert(`链接已复制到剪贴板，请粘贴使用\\n${link}`));\n              }}\n            />\n            <Box gridArea=\"searchBar\" background=\"light-5\">\n              <TextInput\n                placeholder=\"搜索星图\"\n                value={searchString}\n                onChange={event => setsearchString(event.target.value)}\n              />\n            </Box>\n          </Grid>\n\n          <Heading size=\"none\">{`需要：${totalPoints}星图点`}</Heading>\n          {Object.keys(summary).map(key => {\n            const value = summary[key];\n            if (value === undefined) {\n              return <Text key={key}>{key}</Text>;\n            } else if (value > 0) {\n              return <Text key={key}>{`${key}+${value > 1 ? value : `${Math.round(value * 100)}%`}`}</Text>;\n            }\n            return null;\n          })}\n        </Box>\n        <Box gridArea=\"starMap\" background=\"light-2\">\n          <svg width={'100%'} viewBox={size.viewBox}>\n            <rect x={-10} y={-5} width=\"100%\" height=\"100%\" fill=\"Cyan\"></rect>\n\n            {nodes.map(node => (\n              <Node\n                {...node}\n                onClick={() => onClick(node.id)}\n                nodes={nodes}\n                showTooltip={showAllTooltip}\n                searchString={searchString}\n                key={node.id}></Node>\n            ))}\n          </svg>\n        </Box>\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport { Grommet, Box, Heading, ResponsiveContext } from 'grommet';\n// import { FormClose, Notification } from 'grommet-icons';\nimport { TalentSimulator } from './talent-simulator/TalentSimulator';\n\nconst theme = {\n  global: {\n    colors: {\n      brand: '#228BE6',\n    },\n    font: {\n      family: 'Roboto',\n      size: '18px',\n      height: '20px',\n    },\n  },\n};\n\nconst AppBar = (props: any) => (\n  <Box\n    tag=\"header\"\n    direction=\"row\"\n    align=\"center\"\n    justify=\"between\"\n    background=\"brand\"\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    elevation=\"medium\"\n    style={{ zIndex: '1' }}\n    {...props}\n  />\n);\n\nfunction App() {\n  // const [showSidebar, setShowSidebar] = useState(false);\n\n  return (\n    <Grommet theme={theme} full>\n      <ResponsiveContext.Consumer>\n        {size => (\n          <Box fill>\n            <AppBar>\n              <Heading level=\"3\" margin=\"none\">\n                不朽星图模拟器\n              </Heading>\n              {/* sidebar example */}\n              {/* <Button icon={<Notification />} onClick={() => setShowSidebar(!showSidebar)} /> */}\n            </AppBar>\n            <Box direction=\"row\" flex overflow={{ horizontal: 'hidden' }}>\n              <Box flex align=\"center\" justify=\"center\">\n                <TalentSimulator />\n              </Box>\n              {/* sidebar example */}\n              {/* {size !== 'small' ? (\n                <Collapsible direction=\"horizontal\" open={showSidebar}>\n                  <Box flex width=\"medium\" background=\"light-2\" elevation=\"small\" align=\"center\" justify=\"center\">\n                    sidebar\n                  </Box>\n                </Collapsible>\n              ) : (\n                showSidebar && (\n                  <Layer>\n                    <Box background=\"light-2\" tag=\"header\" justify=\"end\" align=\"center\" direction=\"row\">\n                      <Button icon={<FormClose />} onClick={() => setShowSidebar(false)} />\n                    </Box>\n                    <Box fill background=\"light-2\" align=\"center\" justify=\"center\">\n                      sidebar\n                    </Box>\n                  </Layer>\n                )\n              )} */}\n            </Box>\n          </Box>\n        )}\n      </ResponsiveContext.Consumer>\n    </Grommet>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}